package com.howtodoinjava.entity;
// Generated Mar 20, 2017 12:50:11 PM by Hibernate Tools 3.2.1.GA

import com.howtodoinjava.lambdacalculo.PasoInferencia;
import com.howtodoinjava.lambdacalculo.Term;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import org.springframework.util.SerializationUtils;

/**
 * Solucion generated by hbm2java
 */
public class Solucion implements java.io.Serializable {
    
    @Id
    @Column(name = "id")
    @GeneratedValue( strategy = GenerationType.SEQUENCE, generator = "solucion_id_seq")
    @SequenceGenerator(name = "solucion_id_seq", sequenceName = "solucion_id_seq")
    private int id;
    private byte[] arregloSerializado;
    private List<PasoInferencia> arregloInferencias = new ArrayList<PasoInferencia>();
    private Resuelve resuelve;
    
    public Solucion() {
    }
    
    public Solucion(PasoInferencia paso) {
        this.arregloInferencias.add(paso);
//        this.arregloSerializado = SerializationUtils.serialize(this.arregloInferencias);
        this.serialize();
        
    }
    
    public Solucion(Resuelve resuelve, PasoInferencia paso) {
        this.arregloInferencias.add(paso);
        this.resuelve = resuelve;        
//        this.arregloSerializado = SerializationUtils.serialize(this.arregloInferencias);
        this.serialize();
        
    }
    
    public void setId(int id) {
        this.id = id;
    }
    
    public void setArregloSerializado(byte[] arregloSerializado) {
        this.arregloSerializado = arregloSerializado;
    }
    
    public void setArregloInferencias(List<PasoInferencia> arregloInferencias) {
        this.arregloInferencias = arregloInferencias;
//        this.arregloSerializado = SerializationUtils.serialize(arregloInferencias);
        this.serialize();
    }
    
    public void setResuelve(Resuelve resuelve) {
        this.resuelve = resuelve;
    }
    
    public int getId() {
        return id;
    }
    
    public byte[] getArregloSerializado() {
        return arregloSerializado;
    }
    
    public List<PasoInferencia> getArregloInferencias() {
        return arregloInferencias;
    }
    
    public Resuelve getResuelve() {
        return resuelve;
    }
    
    public void addArregloInferencias(PasoInferencia paso) {
        this.arregloInferencias.add(paso);
//        this.arregloSerializado = SerializationUtils.serialize(this.arregloInferencias);
        this.serialize();
        this.deserialize();
    }
    
    public void serialize() {
//        this.arregloInferencias.add(paso);
//        this.arregloSerializado = SerializationUtils.serialize(this.arregloInferencias);
          PasoInferencia chivo;
          chivo = this.arregloInferencias.get(0);
          List<byte[]> blah = new ArrayList<byte[]>();
          
          System.out.println("Valores de chivo");
          System.out.println(chivo.getExpresion());
          System.out.println(chivo.getInstancia());
          System.out.println(chivo.getLeibniz());
          System.out.println(chivo.getTeoDer());
          System.out.println(chivo.getTeoIzq());
          blah.add(SerializationUtils.serialize(chivo.getExpresion()));
          blah.add(SerializationUtils.serialize(chivo.getInstancia()));
          blah.add(SerializationUtils.serialize(chivo.getLeibniz()));
          blah.add(SerializationUtils.serialize(chivo.getTeoDer()));
          blah.add(SerializationUtils.serialize(chivo.getTeoIzq()));
          this.arregloSerializado = SerializationUtils.serialize(blah);
          System.out.println("Serializo toda vaina");
          
    }
          
         
    public void deserialize() { 
          List<byte[]> yay = new ArrayList<byte[]>();
          yay = (List<byte[]>) SerializationUtils.deserialize(arregloSerializado);
          PasoInferencia chavo = new PasoInferencia();
          chavo.setExpresion((Term) SerializationUtils.deserialize(yay.get(0)));
          chavo.setInstancia((String) SerializationUtils.deserialize(yay.get(1)));
          chavo.setLeibniz((Term) SerializationUtils.deserialize(yay.get(2)));
          chavo.setTeoDer((Term) SerializationUtils.deserialize(yay.get(3)));
          chavo.setTeoIzq((Term) SerializationUtils.deserialize(yay.get(4)));
          System.out.println("Valores de chavo");
          System.out.println(chavo.getExpresion());
          System.out.println(chavo.getInstancia());
          System.out.println(chavo.getLeibniz());
          System.out.println(chavo.getTeoDer());
          System.out.println(chavo.getTeoIzq());
          System.out.println("De deserializo todo");
          
    }    
}
